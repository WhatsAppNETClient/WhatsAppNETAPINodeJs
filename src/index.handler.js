require("dotenv").config();const path=require("path"),fs=require("fs"),mime=require("mime-types"),{vcardToJSON:vcardToJSON,waitFor:waitFor,asyncForEach:asyncForEach,saveMedia:saveMedia}=require("./utils"),{MessageTypes:MessageTypes,Location:Location}=require("whatsapp-web.js"),{SESSION_ID:SESSION_ID,IMAGE_AND_DOCUMENT_PATH:IMAGE_AND_DOCUMENT_PATH}=process.env,getContact=async(e,s)=>{let t=void 0;try{t=await s.getContactById(e)}catch(e){console.log(`ex: ${e}`)}return t},connectedHandler=()=>{const{client:e}=require("./wa.utils"),{signalRClient:s,serverHub:t}=require("./signalr.util");console.log("SignalR client connected."),s.connection.hub.invoke(t,"Startup",JSON.stringify({message:"- Initialize...",sessionId:SESSION_ID}));(async()=>{try{await e.initialize()}catch(e){console.log("initialize error ...."),s.connection.hub.invoke(t,"Startup",JSON.stringify({message:new String(e),sessionId:SESSION_ID}))}})(),e.on("message",async a=>{if("status@broadcast"===a.from)return void console.log("update status di skip aja");try{(await a.getChat()).sendSeen()}catch(e){console.log(`ex: ${e}`)}let n={},i="";const o=a.hasMedia&&IMAGE_AND_DOCUMENT_PATH;if(o)try{i=(n=await a.downloadMedia()).mimetype}catch(e){console.log(`ex: ${e}`)}const r=a.from.endsWith("@g.us"),d=await getContact(a.from,e);let c=void 0;r&&(c=await getContact(a.author,e));const l={id:a.id._serialized,sessionId:SESSION_ID,content:a.body?a.body:"",type:a.type?a.type:"",from:a.from?a.from:"",to:a.to?a.to:"",sender:r?void 0:{id:d.id._serialized?d.id._serialized:"",name:d.name?d.name:"",shortName:d.shortName?d.shortName:""},group:r?{id:d.id._serialized?d.id._serialized:"",name:d.name?d.name:"",sender:{id:c.id._serialized?c.id._serialized:"",name:c.name?c.name:"",shortName:c.shortName?c.shortName:""}}:void 0,unixTimestamp:a.timestamp?a.timestamp:0,filename:o?`${a.timestamp}.${mime.extension(i)}`:"",location:a.type===MessageTypes.LOCATION?a.location:void 0,vcards:a.type===MessageTypes.CONTACT_CARD||a.type===MessageTypes.CONTACT_CARD_MULTI?[]:void 0,vcardFilenames:a.type===MessageTypes.CONTACT_CARD||a.type===MessageTypes.CONTACT_CARD_MULTI?[]:void 0};if(l.type!==MessageTypes.CONTACT_CARD&&l.type!==MessageTypes.CONTACT_CARD_MULTI&&l.type!==MessageTypes.LOCATION||(l.content=""),l.type===MessageTypes.CONTACT_CARD&&(l.vcards.push(vcardToJSON(a.body)),IMAGE_AND_DOCUMENT_PATH)){const{fn:e}=l.vcards[0],s=`${l.unixTimestamp}_${e}.vcf`;l.vcardFilenames.push(s)}if(l.type===MessageTypes.CONTACT_CARD_MULTI){let e=0;for(const s of a.vCards){if(l.vcards.push(vcardToJSON(s)),IMAGE_AND_DOCUMENT_PATH){const{fn:s}=l.vcards[e],t=`${l.unixTimestamp}_${s}.vcf`;l.vcardFilenames.push(t)}e++}}if(s.connection.hub.invoke(t,"ReceiveMessage",JSON.stringify({message:l,sessionId:SESSION_ID})),o){const{data:e}=n,s=new Buffer.from(e,"base64");saveMedia(IMAGE_AND_DOCUMENT_PATH,l.filename,s)}if(a.type===MessageTypes.CONTACT_CARD&&IMAGE_AND_DOCUMENT_PATH){const e=l.vcardFilenames[0];saveMedia(IMAGE_AND_DOCUMENT_PATH,e,a.body)}if(l.type===MessageTypes.CONTACT_CARD_MULTI&&IMAGE_AND_DOCUMENT_PATH){let e=0;for(const s of a.vCards){const t=l.vcardFilenames[e];saveMedia(IMAGE_AND_DOCUMENT_PATH,t,s),e++}}})},onSendMessageHandler=async e=>{const{client:s,sendTextAsync:t,sendImageOrFileAsync:a,sendImageOrFileFromUrlAsync:n,replyAsync:i}=require("./wa.utils"),{signalRClient:o,serverHub:r}=require("./signalr.util"),d=JSON.parse(e),{sessionId:c,send_to:l,message:g,type:S,attachmentOrUrl:u,quotedMessageId:m}=d;if(c===SESSION_ID)if("image"===S||"file"===S){const e=(await a(l,u,g,s)).toString().split("_"),[t,n,i]=e;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:t,send_to:n,message:i},sessionId:SESSION_ID}))}else if("url"===S){const e=(await n(l,u,g,s)).toString().split("_"),[t,a,i]=e;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:t,send_to:a,message:i},sessionId:SESSION_ID}))}else if("location"===S){const e=JSON.parse(g),a=new Location(e.latitude,e.longitude,e.description);let n="";const d=(n=m?await i(l,a,m,s):await t(l,a,s)).toString().split("_"),[c,S,u]=d;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:c,send_to:S,message:u},sessionId:SESSION_ID}))}else{let e="";const a=(e=m?await i(l,g,m,s):await t(l,g,s)).toString().split("_"),[n,d,c]=a;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:n,send_to:d,message:c},sessionId:SESSION_ID}))}else console.log("beda sessi enggak usah diproses")},onBroadcastMessageHandler=async(e,s)=>{const{client:t,sendTextAsync:a,sendImageOrFileAsync:n,sendImageOrFileFromUrlAsync:i}=require("./wa.utils"),{signalRClient:o,serverHub:r}=require("./signalr.util"),d=JSON.parse(e);await asyncForEach(d,async e=>{const{sessionId:d,send_to:c,message:l,type:g,attachmentOrUrl:S}=e;if(d===SESSION_ID){if("image"===g||"file"===g){const e=(await n(c,S,l,t)).toString().split("_"),[s,a,i]=e;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:s,send_to:a,message:i},sessionId:SESSION_ID}))}else if("url"===g){const e=(await i(c,S,l,t)).toString().split("_"),[s,a,n]=e;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:s,send_to:a,message:n},sessionId:SESSION_ID}))}else if("location"===g){const e=JSON.parse(l),s=new Location(e.latitude,e.longitude,e.description),n=(await a(c,s,t)).toString().split("_"),[i,d,g]=n;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:i,send_to:d,message:g},sessionId:SESSION_ID}))}else{const e=(await a(c,l,t)).toString().split("_"),[s,n,i]=e;o.connection.hub.invoke(r,"SendMessageStatus",JSON.stringify({messageStatus:{status:s,send_to:n,message:i},sessionId:SESSION_ID}))}await waitFor(s)}})},onGrabContactHandler=async e=>{const{client:s}=require("./wa.utils"),{signalRClient:t,serverHub:a}=require("./signalr.util"),n=JSON.parse(e),{sessionId:i}=n;if(i!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");let o=[];try{o=await s.getContacts()}catch(e){console.log(`ex: ${e}`)}let r=[];o.forEach(e=>{if(!e.isMe){const s=e.id._serialized.toString().split("@");if(s[0].length>5&&"c.us"===s[1]){const s={id:e.id._serialized?e.id._serialized:"",name:e.name?e.name:"",shortName:e.shortName?e.shortName:"",verifiedName:e.verifiedName?e.verifiedName:"",sessionId:SESSION_ID};"status@broadcast"!==s.id&&r.push(s),100===r.length&&(t.connection.hub.invoke(a,"ReceiveContacts",JSON.stringify({contacts:r,sessionId:SESSION_ID})),r=[])}}}),r.push({id:"status@broadcast"}),t.connection.hub.invoke(a,"ReceiveContacts",JSON.stringify({contacts:r,sessionId:SESSION_ID}))},onGrabGroupHandler=async e=>{const{client:s}=require("./wa.utils"),{signalRClient:t,serverHub:a}=require("./signalr.util"),n=JSON.parse(e),{sessionId:i}=n;if(i!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");let o=[];try{o=await s.getChats()}catch(e){console.log(`ex: ${e}`)}let r=[];o.forEach(e=>{if(e.isGroup){const s={id:e.id._serialized?e.id._serialized:"",name:e.name?e.name:"",sessionId:SESSION_ID};r.push(s)}}),r.push({id:"status@broadcast"}),t.connection.hub.invoke(a,"ReceiveGroups",JSON.stringify({groups:r,sessionId:SESSION_ID}))},onGrabGroupAndMemberHandler=async e=>{const{client:s}=require("./wa.utils"),{signalRClient:t,serverHub:a}=require("./signalr.util"),n=JSON.parse(e),{sessionId:i}=n;if(i!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");let o=[];try{o=await s.getChats()}catch(e){console.log(`ex: ${e}`)}let r=[];o.forEach(e=>{if(e.isGroup){let s=[];e.groupMetadata.participants.forEach(e=>{const t={id:e.id._serialized?e.id._serialized:"",name:"",shortName:""};s.push(t)});const t={id:e.id._serialized?e.id._serialized:"",name:e.name?e.name:"",sessionId:SESSION_ID,members:s};r.push(t)}});let d=[];for(const e of r){for(const t of e.members)try{const e=await getContact(t.id,s);t.name=e.name?e.name:"",t.shortName=e.shortName?e.shortName:""}catch(e){console.log("onGrabGroupAndMemberHandler error ...."),console.log(`ex: ${e}`)}d.push(e),1===d.length&&(t.connection.hub.invoke(a,"ReceiveGroups",JSON.stringify({groups:d,sessionId:SESSION_ID})),d=[])}d.push({id:"status@broadcast"}),t.connection.hub.invoke(a,"ReceiveGroups",JSON.stringify({groups:d,sessionId:SESSION_ID}))},onArchiveChatHandler=async e=>{const{client:s}=require("./wa.utils"),t=JSON.parse(e),{sessionId:a}=t;if(a!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");const n=await s.getChats();for(const e of n)await e.archive()},onDeleteChatHandler=async e=>{const{client:s}=require("./wa.utils"),t=JSON.parse(e),{sessionId:a}=t;if(a!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");const n=await s.getChats();for(const e of n)await e.delete()},onDisconnectHandler=async e=>{const{signalRClient:s}=require("./signalr.util"),{client:t}=require("./wa.utils"),a=JSON.parse(e),{sessionId:n}=a;if(n===SESSION_ID){try{await t.destroy()}catch(e){console.log(`ex: ${e}`)}setTimeout(()=>process.exit(),500),s.end()}else console.log("beda sessi enggak usah diproses")},onLogoutHandler=async e=>{const{signalRClient:s}=require("./signalr.util"),{client:t}=require("./wa.utils"),a=JSON.parse(e),{sessionId:n}=a;if(n===SESSION_ID){try{await t.logout();const e=path.join(path.resolve("./session"),`${SESSION_ID}.json`);fs.rm(e,{force:!0},s=>{s&&console.log(s),console.log(`${e} is deleted!`)})}catch(e){console.log(`ex: ${e}`)}setTimeout(()=>process.exit(),500),s.end()}else console.log("beda sessi enggak usah diproses")},onGetUnreadMessageHandler=async e=>{const{client:s}=require("./wa.utils"),{signalRClient:t,serverHub:a}=require("./signalr.util"),n=JSON.parse(e),{sessionId:i}=n;if(i!==SESSION_ID)return void console.log("beda sessi enggak usah diproses");let o=[];try{o=await s.getChats()}catch(e){console.log(`ex: ${e}`)}let r=[];for(const e of o)if(e.sendSeen(),e.unreadCount>0){const n=await e.fetchMessages({limit:e.unreadCount});for(const e of n){const n=e.from.endsWith("@g.us"),i=await getContact(e.from,s);let o=void 0;n&&(o=await getContact(e.author,s));const d={id:e.id._serialized,sessionId:SESSION_ID,content:e.body?e.body:"",type:e.type?e.type:"",from:e.from?e.from:"",to:e.to?e.to:"",sender:n?void 0:{id:i.id._serialized?i.id._serialized:"",name:i.name?i.name:"",shortName:i.shortName?i.shortName:""},group:n?{id:i.id._serialized?i.id._serialized:"",name:i.name?i.name:"",sender:{id:o.id._serialized?o.id._serialized:"",name:o.name?o.name:"",shortName:o.shortName?o.shortName:""}}:void 0,unixTimestamp:e.timestamp?e.timestamp:0,filename:"",location:e.type===MessageTypes.LOCATION?e.location:void 0,vcards:e.type===MessageTypes.CONTACT_CARD||e.type===MessageTypes.CONTACT_CARD_MULTI?[]:void 0};if(d.type!==MessageTypes.CONTACT_CARD&&d.type!==MessageTypes.CONTACT_CARD_MULTI&&d.type!==MessageTypes.LOCATION||(d.content=""),d.type===MessageTypes.CONTACT_CARD&&d.vcards.push(vcardToJSON(e.body)),d.type===MessageTypes.CONTACT_CARD_MULTI)for(const s of e.vCards)d.vcards.push(vcardToJSON(s));console.log(`msg: ${JSON.stringify(d)}`),r.push(d),100===r.length&&(t.connection.hub.invoke(a,"ReceiveMessages",JSON.stringify({messages:r,sessionId:SESSION_ID})),r=[])}}r.length>0&&(t.connection.hub.invoke(a,"ReceiveMessages",JSON.stringify({messages:r,sessionId:SESSION_ID})),r=[])};module.exports={connectedHandler:connectedHandler,onSendMessageHandler:onSendMessageHandler,onBroadcastMessageHandler:onBroadcastMessageHandler,onGrabContactHandler:onGrabContactHandler,onGrabGroupHandler:onGrabGroupHandler,onGrabGroupAndMemberHandler:onGrabGroupAndMemberHandler,onArchiveChatHandler:onArchiveChatHandler,onDeleteChatHandler:onDeleteChatHandler,onGetUnreadMessageHandler:onGetUnreadMessageHandler,onDisconnectHandler:onDisconnectHandler,onLogoutHandler:onLogoutHandler};